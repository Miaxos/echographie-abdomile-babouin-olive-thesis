.s1emc7v7{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:20px;padding-top:60px;}
.c16f7kqh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:1000px;-webkit-flex:1;-ms-flex:1;flex:1;}
.i1thhr4o{width:100%;border:2px solid #75052d;border-radius:5px;}
.e4vrwsk{font-size:18px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;background-color:#f5f5f5;padding:5px;border-radius:5px;-webkit-flex:1;-ms-flex:1;flex:1;}
.l1eeg4oz{color:#75052d;}
.a1yfdiqv{font-size:12px;margin-bottom:5px;}
.i1akipu5{margin:10px;}
.pq2p1yi{margin-top:5px;margin-bottom:5px;padding:5px;}
/*# sourceMappingURL=data:application/json;base64,*/
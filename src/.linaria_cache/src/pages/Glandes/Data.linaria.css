.s14cqkvc{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:20px;padding-top:60px;}
.c1kwuxbh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:1000px;-webkit-flex:1;-ms-flex:1;flex:1;}
.i1osteml{width:100%;border:2px solid #75052d;border-radius:5px;}
.e5vmnpa{font-size:18px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;background-color:#f5f5f5;padding:5px;border-radius:5px;-webkit-flex:1;-ms-flex:1;flex:1;}
.lpe3t7w{color:#75052d;}
.adb4fh9{font-size:12px;margin-bottom:5px;}
.i17int4n{margin:10px;}
.pjgkgjs{margin-top:5px;margin-bottom:5px;padding:5px;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnRob255Z3JpZmZvbi9EZXYvbWF1ZC10aGVzaXMvc3JjL3BhZ2VzL0dsYW5kZXMvRGF0YS50c3giXSwibmFtZXMiOlsiLnMxNGNxa3ZjIiwiLmMxa3d1eGJoIiwiLmkxb3N0ZW1sIiwiLmU1dm1ucGEiLCIubHBlM3Q3dyIsIi5hZGI0Zmg5IiwiLmkxN2ludDRuIiwiLnBqZ2tnanMiXSwibWFwcGluZ3MiOiJBQVNNQTtBQU9BQztBQU9BQztBQU1BQztBQVVBQztBQUlBQztBQUtBQztBQUlBQyIsImZpbGUiOiIvVXNlcnMvYW50aG9ueWdyaWZmb24vRGV2L21hdWQtdGhlc2lzL3NyYy9wYWdlcy9HbGFuZGVzL0RhdGEudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tZXh0cmFuZW91cy1kZXBlbmRlbmNpZXNcbmltcG9ydCB7IGNzcyB9IGZyb20gJ2xpbmFyaWEnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IFRpdGxlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVGl0bGUnO1xuaW1wb3J0IHsgU3BhY2luZyB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvU3BhY2luZyc7XG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgbWVzdXJlZ2xhbmRlcyBmcm9tICcuLi8uLi9hc3NldHMvbWVzdXJlZ2xhbmRlc3N1cnJlbmFsZXMucG5nJztcblxuY29uc3Qgc3R5bGUgPSBjc3NgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXg6IDE7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAyMHB4O1xuICBwYWRkaW5nLXRvcDogNjBweDtcbmA7XG5jb25zdCBjb250ZW50ID0gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXgtd2lkdGg6IDEwMDBweDtcbiAgZmxleDogMTtcbmA7XG5cbmNvbnN0IGltYWdlTWVzdXJlID0gY3NzYFxuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAycHggc29saWQgIzc1MDUyZDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuYDtcblxuY29uc3QgZXhwbGljYXRpb24gPSBjc3NgXG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgcGFkZGluZzogNXB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGZsZXg6IDE7XG5gO1xuXG5jb25zdCBsaW5rU3R5bGUgPSBjc3NgXG4gIGNvbG9yOiAjNzUwNTJkO1xuYDtcblxuY29uc3QgYXJpYW5lID0gY3NzYFxuICBmb250LXNpemU6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbmA7XG5cbmNvbnN0IGltYWdlQ29udGFpbmVyID0gY3NzYFxuICBtYXJnaW46IDEwcHg7XG5gO1xuXG5jb25zdCBwYXJhZ3JhcGggPSBjc3NgXG4gIG1hcmdpbi10b3A6IDVweDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBwYWRkaW5nOiA1cHg7XG5gO1xuXG5jb25zdCBJbWFnZVdpdGhMZWdlbmQgPSAoeyBzcmMsIGxhYmVsIH06IHsgc3JjOiBzdHJpbmc7IGxhYmVsPzogc3RyaW5nIH0pID0+IChcbiAgPGRpdiBjbGFzc05hbWU9e2ltYWdlQ29udGFpbmVyfT5cbiAgICA8aW1nIHNyYz17c3JjfSBhbHQ9XCJyZWlucyBiYWJvdWluIG9saXZlXCIgY2xhc3NOYW1lPXtpbWFnZU1lc3VyZX0gLz5cbiAgICB7bGFiZWwgJiYgKFxuICAgICAgPGRpdiBzdHlsZT17eyBjb2xvcjogJ2dyZXknLCB0ZXh0QWxpZ246ICdjZW50ZXInIH19PlxuICAgICAgICA8aT57bGFiZWx9PC9pPlxuICAgICAgPC9kaXY+XG4gICAgKX1cbiAgPC9kaXY+XG4pO1xuXG5jb25zdCBHbGFuZGVzRGF0YSA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGV9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NvbnRlbnR9PlxuICAgICAgICA8VGl0bGU+XG4gICAgICAgICAgRXhhbWVuIMOpY2hvZ3JhcGhpcXVlIGRlIGwnYXBwYXJlaWwgdXJpbmFpcmUgZHUgYmFib3VpbiBvbGl2ZXsnICd9XG4gICAgICAgICAgPGk+KFBhcGlvIGFudWJpcyk8L2k+XG4gICAgICAgIDwvVGl0bGU+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXthcmlhbmV9PlxuICAgICAgICAgIDxMaW5rIHRvPVwiL1wiIGNsYXNzTmFtZT17bGlua1N0eWxlfT5cbiAgICAgICAgICAgIEFjY3VlaWxcbiAgICAgICAgICA8L0xpbms+eycgJ31cbiAgICAgICAgICAveycgJ31cbiAgICAgICAgICA8TGluayB0bz1cInVyaW5haXJlXCIgY2xhc3NOYW1lPXtsaW5rU3R5bGV9PlxuICAgICAgICAgICAgRXhhbWVuIMOpY2hvZ3JhcGhpcXVlIGRlIGwnYXBwYXJlaWwgdXJpbmFpcmUgZHUgYmFib3VpbiBvbGl2ZVxuICAgICAgICAgIDwvTGluaz57JyAnfVxuICAgICAgICAgIC8gRG9ubsOpZXMgw6ljaG9ncmFwaGlxdWVzIGRlcyBnbGFuZGVzIHN1cnLDqW5hbGVzXG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8U3BhY2luZy5IZWlnaHQuTSAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17ZXhwbGljYXRpb259PlxuICAgICAgICAgIDxoMz5SYXBwb3J0IGV0IHRvcG9ncmFwaGllPC9oMz5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e3BhcmFncmFwaH0+XG4gICAgICAgICAgICBMYSBnbGFuZGUgc3VycmXMgW5hbGUgZ2F1Y2hlIHBsb25nZSBjcmHMgm5pby1kb3JzYWxlbWVudCBqdXNxdeKAmWF1XG4gICAgICAgICAgICBwYW5jcmXMgWFzLiBFbGxlIGVzdCBkb25jIGVuIGNvbnRhY3QgY3JhzIJuaW8tZG9yc2FsIGF2ZWMgbGUgcGFuY3JlzIFhcyxcbiAgICAgICAgICAgIG1lzIFkaW8tZG9yc2FsIGF2ZWMgbOKAmWFvcnRlLCBsYXRlzIFyYWwgdm9pcmUgbGF0ZcyBcm8tdmVudHJhbCBhdmVjIGxlIHJlaW5cbiAgICAgICAgICAgIGdhdWNoZSBldCBjYXVkYWwgdm9pcmUgY2F1ZG8tZG9yc2FsIGF2ZWMgbGVzIHZhaXNzZWF1eCByZcyBbmF1eC4gRW5cbiAgICAgICAgICAgIGVmZmV0LCBsZSByZWluIGdhdWNoZSBlzIF0YW50IHVuIG9yZ2FuZSBhc3NleiBtb2JpbGUsIGxhIGdsYW5kZVxuICAgICAgICAgICAgc3VycmXMgW5hbGUgZ2F1Y2hlIHBldXQgY2hldmF1Y2hlciBwYXJ0aWVsbGVtZW50IGxlcyB2YWlzc2VhdXggcmXMgW5hdXhcbiAgICAgICAgICAgIGV0IHBldXQgc2UgZ2xpc3NlciBkb3JzYWxlbWVudCBhdSByZWluLlxuICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8cCBjbGFzc05hbWU9e3BhcmFncmFwaH0+XG4gICAgICAgICAgICBMYSBnbGFuZGUgc3VycsOpbmFsZSBkcm9pdGUgZXN0IGVuIGNvbnRhY3QgY3JhzIJuaW8tdmVudHJhbCBhdmVjIGxlXG4gICAgICAgICAgICBmb2llLCBsYXRlzIFyby1jYXVkYWwgYXZlYyBsZSByZWluIGV0IG1lzIFkaWFsIGF2ZWMgbGEgdmVpbmUgY2F2ZVxuICAgICAgICAgICAgY2F1ZGFsZS5cbiAgICAgICAgICA8L3A+XG5cbiAgICAgICAgICA8aDM+Rm9ybWUgZGVzIGdsYW5kZXMgc3VycsOpbmFsZXM8L2gzPlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgIDxsaT5HbGFuZGUgc3VycmXMgW5hbGUgZ2F1Y2hlOjwvbGk+XG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgIDxsaT5Db3VwZSB0cmFuc3ZlcnNhbGU6IGZvcm1lIGRlIGJvb21lcmFuZzwvbGk+XG4gICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICBDb3VwZSBsb25naXR1ZGluYWxlOiBmb3JtZSBkZSBwb2ludGUgZGUgbGFuY2UsIGF2ZWMgdW4gYXBleFxuICAgICAgICAgICAgICAgIGNyYcyCbmlhbFxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDxsaT5HbGFuZGUgc3VycmXMgW5hbGUgZHJvaXRlIChwbHVzIHJhcmVtZW50IHZpc3VhbGlzw6llKTo8L2xpPlxuICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICA8bGk+Q291cGUgdHJhbnN2ZXJzYWxlOiBmb3JtZSBkZSBib29tZXJhbmc8L2xpPlxuICAgICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgICAgQ291cGUgbG9uZ2l0dWRpbmFsZTogb3Zvw69kZSBsYXRlzIFyYWxlbWVudCBldCB0cmlhbmd1bGFpcmVcbiAgICAgICAgICAgICAgICBtZcyBZGlhbGVtZW50LCBhdmVjIHVuIGFwZXggY2F1ZGFsXG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDwvdWw+XG5cbiAgICAgICAgICA8aDM+Q29tcGFyYWlzb24gZOKAmcOpY2hvZ8OpbmljaXTDqTwvaDM+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICBDb3J0ZXggc3VycmXMgW5hbGllbiBhcHBhcmFpzIJ0IGh5cG9lzIFjaG9nZcyAbmUgcGFyIHJhcHBvcnQgYXUgcGFuY3JlzIFhc1xuICAgICAgICAgICAgICBldCBhdSBjb3J0ZXggcmXMgW5hbCwgcGFyZm9pcyBtZcyCbWUgcHJlc3F1ZSBhbmXMgWNob2dlzIBuZVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgTWVkdWxsYSBjZW50cmFsZSAobGlnbmUgZcyBcGFpc3NlIGh5cGVyZcyBY2hvZ2XMgG5lKSwgbm9uIHZpc3VhbGlzw6llIMOgXG4gICAgICAgICAgICAgIGNoYXF1ZSBmb2lzXG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpPkNhcHN1bGUgc3VycsOpbmFsaWVubmUgaHlwZXJlzIFjaG9nZcyAbmU8L2xpPlxuICAgICAgICAgIDwvdWw+XG5cbiAgICAgICAgICA8aDM+TWVzdXJlcyBkZXMgZ2xhbmRlcyBzdXJyw6luYWxlczwvaDM+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICBTZXVsZXMgbGVzIGXMgXBhaXNzZXVycyBlbiBjb3VwZSBzYWdpdHRhbGUgZGVzIHBvzIJsZXMgY3JhzIJuaWFsIGV0XG4gICAgICAgICAgICAgIGNhdWRhbCBkZXMgZ2xhbmRlcyBzdXJyZcyBbmFsZXMgc29udCBtZXN1cmXMgWVzXG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICBQb3VyIGxhIGdsYW5kZSBzdXJyZcyBbmFsZSBkcm9pdGUsIGxhIG1lc3VyZSBz4oCZZWZmZWN0dWUgZW4gY291cGVcbiAgICAgICAgICAgICAgcGFyYXNhZ2l0dGFsZSBtZcyBZGlhbGUsIGF1IG5pdmVhdSBkZSBzYSBzZWN0aW9uIHRyaWFuZ3VsYWlyZVxuICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICA8L3VsPlxuICAgICAgICAgIDxJbWFnZVdpdGhMZWdlbmQgc3JjPXttZXN1cmVnbGFuZGVzfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgR2xhbmRlc0RhdGE7XG4iXX0=*/
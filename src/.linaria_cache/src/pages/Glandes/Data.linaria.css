.s14cqkvc{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding:20px;padding-top:60px;}
.c1kwuxbh{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:1000px;-webkit-flex:1;-ms-flex:1;flex:1;}
.i1osteml{width:100%;border:2px solid #75052d;border-radius:5px;}
.e5vmnpa{font-size:18px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;background-color:#f5f5f5;padding:5px;border-radius:5px;-webkit-flex:1;-ms-flex:1;flex:1;}
.lpe3t7w{color:#75052d;}
.adb4fh9{font-size:12px;margin-bottom:5px;}
.i17int4n{margin:10px;}
.pjgkgjs{margin-top:5px;margin-bottom:5px;padding:5px;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnRob255Z3JpZmZvbi9EZXYvbWF1ZC10aGVzaXMvc3JjL3BhZ2VzL0dsYW5kZXMvRGF0YS50c3giXSwibmFtZXMiOlsiLnMxNGNxa3ZjIiwiLmMxa3d1eGJoIiwiLmkxb3N0ZW1sIiwiLmU1dm1ucGEiLCIubHBlM3Q3dyIsIi5hZGI0Zmg5IiwiLmkxN2ludDRuIiwiLnBqZ2tnanMiXSwibWFwcGluZ3MiOiJBQVNNQTtBQU9BQztBQU9BQztBQU1BQztBQVVBQztBQUlBQztBQUtBQztBQUlBQyIsImZpbGUiOiIvVXNlcnMvYW50aG9ueWdyaWZmb24vRGV2L21hdWQtdGhlc2lzL3NyYy9wYWdlcy9HbGFuZGVzL0RhdGEudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tZXh0cmFuZW91cy1kZXBlbmRlbmNpZXNcbmltcG9ydCB7IGNzcyB9IGZyb20gJ2xpbmFyaWEnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IFRpdGxlIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvVGl0bGUnO1xuaW1wb3J0IHsgU3BhY2luZyB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvU3BhY2luZyc7XG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgbWVzdXJlZ2xhbmRlcyBmcm9tICcuLi8uLi9hc3NldHMvbWVzdXJlZ2xhbmRlc3N1cnJlbmFsZXMucG5nJztcblxuY29uc3Qgc3R5bGUgPSBjc3NgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXg6IDE7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiAyMHB4O1xuICBwYWRkaW5nLXRvcDogNjBweDtcbmA7XG5jb25zdCBjb250ZW50ID0gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXgtd2lkdGg6IDEwMDBweDtcbiAgZmxleDogMTtcbmA7XG5cbmNvbnN0IGltYWdlTWVzdXJlID0gY3NzYFxuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiAycHggc29saWQgIzc1MDUyZDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuYDtcblxuY29uc3QgZXhwbGljYXRpb24gPSBjc3NgXG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgcGFkZGluZzogNXB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGZsZXg6IDE7XG5gO1xuXG5jb25zdCBsaW5rU3R5bGUgPSBjc3NgXG4gIGNvbG9yOiAjNzUwNTJkO1xuYDtcblxuY29uc3QgYXJpYW5lID0gY3NzYFxuICBmb250LXNpemU6IDEycHg7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbmA7XG5cbmNvbnN0IGltYWdlQ29udGFpbmVyID0gY3NzYFxuICBtYXJnaW46IDEwcHg7XG5gO1xuXG5jb25zdCBwYXJhZ3JhcGggPSBjc3NgXG4gIG1hcmdpbi10b3A6IDVweDtcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBwYWRkaW5nOiA1cHg7XG5gO1xuXG5jb25zdCBJbWFnZVdpdGhMZWdlbmQgPSAoeyBzcmMsIGxhYmVsIH06IHsgc3JjOiBzdHJpbmc7IGxhYmVsPzogc3RyaW5nIH0pID0+IChcbiAgPGRpdiBjbGFzc05hbWU9e2ltYWdlQ29udGFpbmVyfT5cbiAgICA8aW1nIHNyYz17c3JjfSBhbHQ9XCJyZWlucyBiYWJvdWluIG9saXZlXCIgY2xhc3NOYW1lPXtpbWFnZU1lc3VyZX0gLz5cbiAgICB7bGFiZWwgJiYgKFxuICAgICAgPGRpdiBzdHlsZT17eyBjb2xvcjogJ2dyZXknLCB0ZXh0QWxpZ246ICdjZW50ZXInIH19PlxuICAgICAgICA8aT57bGFiZWx9PC9pPlxuICAgICAgPC9kaXY+XG4gICAgKX1cbiAgPC9kaXY+XG4pO1xuXG5jb25zdCBHbGFuZGVzRGF0YSA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGV9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NvbnRlbnR9PlxuICAgICAgICA8VGl0bGU+XG4gICAgICAgICAgRXhhbWVuIMOpY2hvZ3JhcGhpcXVlIGRlIGwnYXBwYXJlaWwgdXJpbmFpcmUgZHUgYmFib3VpbiBvbGl2ZXsnICd9XG4gICAgICAgICAgPGk+KFBhcGlvIGFudWJpcyk8L2k+XG4gICAgICAgIDwvVGl0bGU+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXthcmlhbmV9PlxuICAgICAgICAgIDxMaW5rIHRvPVwiL1wiIGNsYXNzTmFtZT17bGlua1N0eWxlfT5cbiAgICAgICAgICAgIEFjY3VlaWxcbiAgICAgICAgICA8L0xpbms+eycgJ31cbiAgICAgICAgICAveycgJ31cbiAgICAgICAgICA8TGluayB0bz1cInVyaW5haXJlXCIgY2xhc3NOYW1lPXtsaW5rU3R5bGV9PlxuICAgICAgICAgICAgRXhhbWVuIMOpY2hvZ3JhcGhpcXVlIGRlIGwnYXBwYXJlaWwgdXJpbmFpcmUgZHUgYmFib3VpbiBvbGl2ZVxuICAgICAgICAgIDwvTGluaz57JyAnfVxuICAgICAgICAgIC8gRG9ubsOpZXMgw6ljaG9ncmFwaGlxdWUgZGVzIGdsYW5kZXMgc3VycsOpbmFsZXNcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxTcGFjaW5nLkhlaWdodC5NIC8+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtleHBsaWNhdGlvbn0+XG4gICAgICAgICAgPGgzPlJhcHBvcnQgZXQgdG9wb2dyYXBoaWU8L2gzPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17cGFyYWdyYXBofT5cbiAgICAgICAgICAgIExhIGdsYW5kZSBzdXJyZcyBbmFsZSBnYXVjaGUgcGxvbmdlIGNyYcyCbmlvLWRvcnNhbGVtZW50IGp1c3F14oCZYXVcbiAgICAgICAgICAgIHBhbmNyZcyBYXMuIEVsbGUgZXN0IGRvbmMgZW4gY29udGFjdCBjcmHMgm5pby1kb3JzYWwgYXZlYyBsZSBwYW5jcmXMgWFzLFxuICAgICAgICAgICAgbWXMgWRpby1kb3JzYWwgYXZlYyBs4oCZYW9ydGUsIGxhdGXMgXJhbCB2b2lyZSBsYXRlzIFyby12ZW50cmFsIGF2ZWMgbGUgcmVpblxuICAgICAgICAgICAgZ2F1Y2hlIGV0IGNhdWRhbCB2b2lyZSBjYXVkby1kb3JzYWwgYXZlYyBsZXMgdmFpc3NlYXV4IHJlzIFuYXV4LiBFblxuICAgICAgICAgICAgZWZmZXQsIGxlIHJlaW4gZ2F1Y2hlIGXMgXRhbnQgdW4gb3JnYW5lIGFzc2V6IG1vYmlsZSwgbGEgZ2xhbmRlXG4gICAgICAgICAgICBzdXJyZcyBbmFsZSBnYXVjaGUgcGV1dCBjaGV2YXVjaGVyIHBhcnRpZWxsZW1lbnQgbGVzIHZhaXNzZWF1eCByZcyBbmF1eFxuICAgICAgICAgICAgZXQgcGV1dCBzZSBnbGlzc2VyIGRvcnNhbGVtZW50IGF1IHJlaW4uXG4gICAgICAgICAgPC9wPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17cGFyYWdyYXBofT5cbiAgICAgICAgICAgIExhIGdsYW5kZSBzdXJyw6luYWxlIGRyb2l0ZSBlc3QgZW4gY29udGFjdCBjcmHMgm5pby12ZW50cmFsIGF2ZWMgbGVcbiAgICAgICAgICAgIGZvaWUsIGxhdGXMgXJvLWNhdWRhbCBhdmVjIGxlIHJlaW4gZXQgbWXMgWRpYWwgYXZlYyBsYSB2ZWluZSBjYXZlXG4gICAgICAgICAgICBjYXVkYWxlLlxuICAgICAgICAgIDwvcD5cblxuICAgICAgICAgIDxoMz5Gb3JtZSBkZXMgZ2xhbmRlcyBzdXJyw6luYWxlczwvaDM+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAgPGxpPkdsYW5kZSBzdXJyZcyBbmFsZSBnYXVjaGU6PC9saT5cbiAgICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgICAgPGxpPkNvdXBlIHRyYW5zdmVyc2FsZTogZm9ybWUgZGUgYm9vbWVyYW5nPC9saT5cbiAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgIENvdXBlIGxvbmdpdHVkaW5hbGU6IGZvcm1lIGRlIHBvaW50ZSBkZSBsYW5jZSwgYXZlYyB1biBhcGV4XG4gICAgICAgICAgICAgICAgY3JhzIJuaWFsXG4gICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgPGxpPkdsYW5kZSBzdXJyZcyBbmFsZSBkcm9pdGUgKHBsdXMgcmFyZW1lbnQgdmlzdWFsaXPDqWUpOjwvbGk+XG4gICAgICAgICAgICA8dWw+XG4gICAgICAgICAgICAgIDxsaT5Db3VwZSB0cmFuc3ZlcnNhbGU6IGZvcm1lIGRlIGJvb21lcmFuZzwvbGk+XG4gICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICBDb3VwZSBsb25naXR1ZGluYWxlOiBvdm/Dr2RlIGxhdGXMgXJhbGVtZW50IGV0IHRyaWFuZ3VsYWlyZVxuICAgICAgICAgICAgICAgIG1lzIFkaWFsZW1lbnQsIGF2ZWMgdW4gYXBleCBjYXVkYWxcbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPC91bD5cblxuICAgICAgICAgIDxoMz5Db21wYXJhaXNvbiBk4oCZw6ljaG9nw6luaWNpdMOpPC9oMz5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgIENvcnRleCBzdXJyZcyBbmFsaWVuIGFwcGFyYWnMgnQgaHlwb2XMgWNob2dlzIBuZSBwYXIgcmFwcG9ydCBhdSBwYW5jcmXMgWFzXG4gICAgICAgICAgICAgIGV0IGF1IGNvcnRleCByZcyBbmFsLCBwYXJmb2lzIG1lzIJtZSBwcmVzcXVlIGFuZcyBY2hvZ2XMgG5lXG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICBNZWR1bGxhIGNlbnRyYWxlIChsaWduZSBlzIFwYWlzc2UgaHlwZXJlzIFjaG9nZcyAbmUpLCBub24gdmlzdWFsaXPDqWUgw6BcbiAgICAgICAgICAgICAgY2hhcXVlIGZvaXNcbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGk+Q2Fwc3VsZSBzdXJyw6luYWxpZW5uZSBoeXBlcmXMgWNob2dlzIBuZTwvbGk+XG4gICAgICAgICAgPC91bD5cblxuICAgICAgICAgIDxoMz5NZXN1cmVzIGRlcyBnbGFuZGVzIHN1cnLDqW5hbGVzPC9oMz5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgIFNldWxlcyBsZXMgZcyBcGFpc3NldXJzIGVuIGNvdXBlIHNhZ2l0dGFsZSBkZXMgcG/MgmxlcyBjcmHMgm5pYWwgZXRcbiAgICAgICAgICAgICAgY2F1ZGFsIGRlcyBnbGFuZGVzIHN1cnJlzIFuYWxlcyBzb250IG1lc3VyZcyBZXNcbiAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICA8bGk+XG4gICAgICAgICAgICAgIFBvdXIgbGEgZ2xhbmRlIHN1cnJlzIFuYWxlIGRyb2l0ZSwgbGEgbWVzdXJlIHPigJllZmZlY3R1ZSBlbiBjb3VwZVxuICAgICAgICAgICAgICBwYXJhc2FnaXR0YWxlIG1lzIFkaWFsZSwgYXUgbml2ZWF1IGRlIHNhIHNlY3Rpb24gdHJpYW5ndWxhaXJlXG4gICAgICAgICAgICA8L2xpPlxuICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgPEltYWdlV2l0aExlZ2VuZCBzcmM9e21lc3VyZWdsYW5kZXN9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBHbGFuZGVzRGF0YTtcbiJdfQ==*/